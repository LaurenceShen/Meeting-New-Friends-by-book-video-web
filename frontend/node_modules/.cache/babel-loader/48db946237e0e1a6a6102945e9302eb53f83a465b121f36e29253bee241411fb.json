{"ast":null,"code":"var _jsxFileName = \"/home/jeff/Web/frontend/src/useChat.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, useContext, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet client = new WebSocket('ws://localhost:4000');\nconst ChatContext = /*#__PURE__*/createContext({\n  books: [],\n  status: {},\n  sendMessage: () => {},\n  clearMessages: () => {},\n  Search: () => {}\n});\n//開啟後執行的動作，指定一個 function 會在連結 WebSocket 後執行  \nconst ChatProvider = props => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [status, setStatus] = useState({});\n  const [result, setResult] = useState([]);\n  client.onmessage = byteString => {\n    const {\n      data\n    } = byteString;\n    const [task, payload] = JSON.parse(data);\n    console.log('client task:' + task);\n    switch (task) {\n      case 'output':\n        {\n          setBooks([...books, ...[...new Set(payload)]]);\n          console.log(\"yayaya\" + payload);\n          break;\n        }\n      case 'search':\n        {\n          setResult(payload);\n          console.log('yayaya' + payload);\n          break;\n        }\n    }\n  };\n  const sendData = async data => {\n    console.log(data);\n    let a = await client.send(JSON.stringify(data));\n    console.log(\"dkkkkk\" + a);\n  };\n  const sendMessage = payload => {\n    console.log(\"ok\");\n    Newsend([\"init\", payload]);\n  };\n  const clearMessages = () => {\n    sendData(['clear']);\n  };\n  const Search = payload => {\n    console.log('s');\n    Newsend(['search', payload]);\n  };\n  const waitForConnection = function (callback, interval) {\n    if (client.readyState === 1) {\n      callback();\n    } else {\n      // optional: implement backoff for interval here\n      setTimeout(function () {\n        waitForConnection(callback, interval);\n      }, interval);\n    }\n  };\n  const Newsend = function (data) {\n    waitForConnection(async function () {\n      let a = await client.send(JSON.stringify(data));\n      console.log(\"dkkk\" + a);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      status,\n      books,\n      sendMessage,\n      clearMessages,\n      Search\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatProvider, \"kB2PNujdZxCqfyTDMkT7K35RNIw=\");\n_c = ChatProvider;\nconst useChat = () => {\n  _s2();\n  return useContext(ChatContext);\n};\n_s2(useChat, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { ChatProvider, useChat };\n\n// export default ()=>{ \n//     ws.onopen = () => {\n//         console.log('open connection')\n//     }  \n//     ws.onmessage = event => { \n//         console.log(event)  \n//     }  \n//     //關閉後執行的動作，指定一個 function 會在連結中斷後執行\n//     ws.onclose = () => {\n//         console.log('close connection')\n//     }\n// }   \nvar _c;\n$RefreshReg$(_c, \"ChatProvider\");","map":{"version":3,"names":["useState","useEffect","useContext","createContext","jsxDEV","_jsxDEV","client","WebSocket","ChatContext","books","status","sendMessage","clearMessages","Search","ChatProvider","props","_s","setBooks","setStatus","result","setResult","onmessage","byteString","data","task","payload","JSON","parse","console","log","Set","sendData","a","send","stringify","Newsend","waitForConnection","callback","interval","readyState","setTimeout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useChat","_s2","$RefreshReg$"],"sources":["/home/jeff/Web/frontend/src/useChat.js"],"sourcesContent":["\nimport { useState ,useEffect, useContext,createContext} from \"react\";\nlet client = new WebSocket('ws://localhost:4000')\nconst ChatContext=createContext({ \n    books:[],\n    status:{}, \n    sendMessage:()=>{},           \n    clearMessages:()=>{},  \n\tSearch:()=>{}\n});            \n//開啟後執行的動作，指定一個 function 會在連結 WebSocket 後執行  \nconst ChatProvider=(props)=>{    \n    const [books,setBooks]=useState([]);  \n    const [status,setStatus]=useState({});   \n\tconst [result,setResult]=useState([]);\n    client.onmessage=(byteString)=>{  \n        const {data}=byteString; \n        const [task,payload]=JSON.parse(data);\n        console.log('client task:'+task); \n        switch(task){ \n            case 'output':{  \n                setBooks([...books,...[...new Set(payload)]]);\n                console.log(\"yayaya\"+payload)  \n                break;\n            } \n\t\t\tcase 'search':{\n\t\t\t\tsetResult(payload);\n\t\t\t\tconsole.log('yayaya'+payload)\n\t\t\t\tbreak;\n\t\t\t}\n                 \n        }  \n    }\n    const sendData = async (data) => { \n        console.log(data);\n        let a=await client.send( JSON.stringify(data));\n        console.log(\"dkkkkk\"+a); \n    };      \n    \n    const sendMessage=(payload)=>{ \n        console.log(\"ok\");\n        Newsend([\"init\",payload]); \n    }\n    const clearMessages=()=>{\n        sendData(['clear']);\n    };\n    const Search=(payload)=>{\n\t\tconsole.log('s');\n\t\tNewsend(['search',payload]);\t\t\t\t\t\t\t\n    };   \n    const waitForConnection = function (callback, interval) {\n        if (client.readyState === 1) {\n            callback();\n        } else {    \n            // optional: implement backoff for interval here\n            setTimeout(function () {\n                waitForConnection(callback, interval);\n            }, interval);\n        }\n    };\n    const Newsend = function (data) {\n        waitForConnection(async function () {\n           let a= await client.send(JSON.stringify(data));\n           console.log(\"dkkk\"+a);\n        }, 1000);\n    };\n    \n    return ( \n        <ChatContext.Provider\n            value={{\n                status,books,\n                sendMessage,clearMessages,Search\n            }}\n            {...props}   \n        />\n        \n    );\n} \nconst useChat=()=>useContext(ChatContext)\nexport {ChatProvider,useChat}\n\n// export default ()=>{ \n//     ws.onopen = () => {\n//         console.log('open connection')\n//     }  \n//     ws.onmessage = event => { \n//         console.log(event)  \n//     }  \n//     //關閉後執行的動作，指定一個 function 會在連結中斷後執行\n//     ws.onclose = () => {\n//         console.log('close connection')\n//     }\n// }   \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}