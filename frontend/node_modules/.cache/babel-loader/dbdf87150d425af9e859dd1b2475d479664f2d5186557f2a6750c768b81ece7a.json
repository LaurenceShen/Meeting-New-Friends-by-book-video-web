{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nlet client = new WebSocket('ws://localhost:4000');\n\n//開啟後執行的動作，指定一個 function 會在連結 WebSocket 後執行\nconst toback = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [status, setStatus] = useState({});\n  const isOpen = ws => {\n    return ws.readyState === ws.OPEN;\n  };\n  client.onmessage = byteString => {\n    const {\n      data\n    } = byteString;\n    const [task, payload] = JSON.parse(data);\n    console.log('client task:' + task);\n    switch (task) {\n      case 'output':\n        {\n          setBooks(() => [...books, ...payload]);\n          console.log(\"yayaya\" + payload);\n          break;\n        }\n      default:\n        break;\n    }\n  };\n  const sendData = async data => {\n    let a = await client.send(JSON.stringify(data));\n    console.log(\"dkkkkk\" + a);\n  };\n  const sendMessage = payload => {\n    sendData([\"input\", payload]);\n    //setMessages([...messages,payload]);\n\n    // setStatus({\n    //     type:'success',\n    //     msg:\"Message sent.\",\n    // });\n    console.log(payload);\n  };\n  const clearMessages = () => {\n    sendData(['clear']);\n  };\n  return {\n    books,\n    status,\n    sendMessage,\n    clearMessages\n  };\n};\n_s(toback, \"IMm1Efqb/Ugi3L17plBbQcD5te8=\");\nexport default toback;\n// export default ()=>{\n//     ws.onopen = () => {\n//         console.log('open connection')\n//     }\n//     ws.onmessage = event => { \n//         console.log(event)  \n//     }  \n//     //關閉後執行的動作，指定一個 function 會在連結中斷後執行\n//     ws.onclose = () => {\n//         console.log('close connection')\n//     }\n// }","map":{"version":3,"names":["useState","client","WebSocket","toback","_s","books","setBooks","status","setStatus","isOpen","ws","readyState","OPEN","onmessage","byteString","data","task","payload","JSON","parse","console","log","sendData","a","send","stringify","sendMessage","clearMessages"],"sources":["/home/jeff/Web/frontend/src/toback.js"],"sourcesContent":["import {useState} from \"react\"\nlet client = new WebSocket('ws://localhost:4000')\n\n//開啟後執行的動作，指定一個 function 會在連結 WebSocket 後執行\nconst toback=()=>{\n    const [books,setBooks]=useState([]);\n    const [status,setStatus]=useState({});\n    const isOpen=(ws)=>{return ws.readyState===ws.OPEN}\n    client.onmessage=(byteString)=>{\n        const {data}=byteString;\n        const [task,payload]=JSON.parse(data);\n        console.log('client task:'+task);\n        switch(task){\n            case 'output':{\n                setBooks(()=>[...books,...payload]);\n                console.log(\"yayaya\"+payload)\n                break;\n            }\n            default:break;\n        }\n    }\n    const sendData = async (data) => {\n\n        let a=await client.send( JSON.stringify(data));\n        console.log(\"dkkkkk\"+a);\n    };\n\n    const sendMessage=(payload)=>{\n        sendData([\"input\",payload]);\n        //setMessages([...messages,payload]);\n        \n        // setStatus({\n        //     type:'success',\n        //     msg:\"Message sent.\",\n        // });\n        console.log(payload);\n    }\n    const clearMessages=()=>{\n        sendData(['clear']);\n    };\n    return {books,status,sendMessage,clearMessages}\n}\nexport default toback;\n// export default ()=>{\n//     ws.onopen = () => {\n//         console.log('open connection')\n//     }\n//     ws.onmessage = event => { \n//         console.log(event)  \n//     }  \n//     //關閉後執行的動作，指定一個 function 會在連結中斷後執行\n//     ws.onclose = () => {\n//         console.log('close connection')\n//     }\n// }   \n"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,IAAIC,MAAM,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;;AAEjD;AACA,MAAMC,MAAM,GAACA,CAAA,KAAI;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACN,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAM,CAACO,MAAM,EAACC,SAAS,CAAC,GAACR,QAAQ,CAAC,CAAC,CAAC,CAAC;EACrC,MAAMS,MAAM,GAAEC,EAAE,IAAG;IAAC,OAAOA,EAAE,CAACC,UAAU,KAAGD,EAAE,CAACE,IAAI;EAAA,CAAC;EACnDX,MAAM,CAACY,SAAS,GAAEC,UAAU,IAAG;IAC3B,MAAM;MAACC;IAAI,CAAC,GAACD,UAAU;IACvB,MAAM,CAACE,IAAI,EAACC,OAAO,CAAC,GAACC,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;IACrCK,OAAO,CAACC,GAAG,CAAC,cAAc,GAACL,IAAI,CAAC;IAChC,QAAOA,IAAI;MACP,KAAK,QAAQ;QAAC;UACVV,QAAQ,CAAC,MAAI,CAAC,GAAGD,KAAK,EAAC,GAAGY,OAAO,CAAC,CAAC;UACnCG,OAAO,CAACC,GAAG,CAAC,QAAQ,GAACJ,OAAO,CAAC;UAC7B;QACJ;MACA;QAAQ;IACZ;EACJ,CAAC;EACD,MAAMK,QAAQ,GAAG,MAAOP,IAAI,IAAK;IAE7B,IAAIQ,CAAC,GAAC,MAAMtB,MAAM,CAACuB,IAAI,CAAEN,IAAI,CAACO,SAAS,CAACV,IAAI,CAAC,CAAC;IAC9CK,OAAO,CAACC,GAAG,CAAC,QAAQ,GAACE,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMG,WAAW,GAAET,OAAO,IAAG;IACzBK,QAAQ,CAAC,CAAC,OAAO,EAACL,OAAO,CAAC,CAAC;IAC3B;;IAEA;IACA;IACA;IACA;IACAG,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;EACxB,CAAC;EACD,MAAMU,aAAa,GAACA,CAAA,KAAI;IACpBL,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACvB,CAAC;EACD,OAAO;IAACjB,KAAK;IAACE,MAAM;IAACmB,WAAW;IAACC;EAAa,CAAC;AACnD,CAAC;AAAAvB,EAAA,CArCKD,MAAM;AAsCZ,eAAeA,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}