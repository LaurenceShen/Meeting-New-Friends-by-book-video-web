{"ast":null,"code":"var _jsxFileName = \"/home/jeff/Web/frontend/src/toback.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, useContext, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet client = new WebSocket('ws://localhost:4000');\nconst ChatContext = /*#__PURE__*/createContext({\n  status: {},\n  me: '',\n  messages: [],\n  sendMessage: () => {},\n  clearMessages: () => {},\n  displayStatus: () => {}\n});\n//開啟後執行的動作，指定一個 function 會在連結 WebSocket 後執行\nconst ChatProvider = props => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [status, setStatus] = useState({});\n  client.onmessage = byteString => {\n    const {\n      data\n    } = byteString;\n    const [task, payload] = JSON.parse(data);\n    console.log('client task:' + task);\n    switch (task) {\n      case 'output':\n        {\n          setBooks(() => [...books, ...payload]);\n          console.log(\"yayaya\" + payload);\n          break;\n        }\n      default:\n        break;\n    }\n  };\n  const sendData = async data => {\n    let a = await client.send(JSON.stringify(data));\n    console.log(\"dkkkkk\" + a);\n  };\n  const sendMessage = payload => {\n    sendData([\"input\", payload]);\n    console.log(payload);\n  };\n  const clearMessages = () => {\n    sendData(['clear']);\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      status,\n      books,\n      sendMessage,\n      clearMessages\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatProvider, \"IMm1Efqb/Ugi3L17plBbQcD5te8=\");\n_c = ChatProvider;\nconst toback = () => {\n  _s2();\n  return useContext(ChatContext);\n};\n_s2(toback, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { ChatProvider, toback };\n\n// export default ()=>{\n//     ws.onopen = () => {\n//         console.log('open connection')\n//     }\n//     ws.onmessage = event => { \n//         console.log(event)  \n//     }  \n//     //關閉後執行的動作，指定一個 function 會在連結中斷後執行\n//     ws.onclose = () => {\n//         console.log('close connection')\n//     }\n// }   \nvar _c;\n$RefreshReg$(_c, \"ChatProvider\");","map":{"version":3,"names":["useState","useEffect","useContext","createContext","jsxDEV","_jsxDEV","client","WebSocket","ChatContext","status","me","messages","sendMessage","clearMessages","displayStatus","ChatProvider","props","_s","books","setBooks","setStatus","onmessage","byteString","data","task","payload","JSON","parse","console","log","sendData","a","send","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","toback","_s2","$RefreshReg$"],"sources":["/home/jeff/Web/frontend/src/toback.js"],"sourcesContent":["\nimport { useState ,useEffect, useContext,createContext} from \"react\";\nlet client = new WebSocket('ws://localhost:4000')\nconst ChatContext=createContext({\n    status:{},\n    me:'',\n    messages:[],\n    sendMessage:()=>{},\n    clearMessages:()=>{},\n    displayStatus:()=>{},\n});\n//開啟後執行的動作，指定一個 function 會在連結 WebSocket 後執行\nconst ChatProvider=(props)=>{\n    const [books,setBooks]=useState([]);\n    const [status,setStatus]=useState({});\n    client.onmessage=(byteString)=>{\n        const {data}=byteString;\n        const [task,payload]=JSON.parse(data);\n        console.log('client task:'+task);\n        switch(task){\n            case 'output':{\n                setBooks(()=>[...books,...payload]);\n                console.log(\"yayaya\"+payload)\n                break;\n            }\n            default:break;\n        }\n    }\n    const sendData = async (data) => {\n\n        let a=await client.send( JSON.stringify(data));\n        console.log(\"dkkkkk\"+a);\n    };\n\n    const sendMessage=(payload)=>{\n        sendData([\"input\",payload]);\n        console.log(payload);\n    }\n    const clearMessages=()=>{\n        sendData(['clear']);\n    };\n    return (\n        <ChatContext.Provider\n            value={{\n                status,books,\n                sendMessage,clearMessages\n            }}\n            {...props}\n        />\n        \n    );\n}\nconst toback=()=>useContext(ChatContext)\nexport{ChatProvider,toback}\n\n// export default ()=>{\n//     ws.onopen = () => {\n//         console.log('open connection')\n//     }\n//     ws.onmessage = event => { \n//         console.log(event)  \n//     }  \n//     //關閉後執行的動作，指定一個 function 會在連結中斷後執行\n//     ws.onclose = () => {\n//         console.log('close connection')\n//     }\n// }   \n"],"mappings":";;;AACA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,UAAU,EAACC,aAAa,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACrE,IAAIC,MAAM,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;AACjD,MAAMC,WAAW,gBAACL,aAAa,CAAC;EAC5BM,MAAM,EAAC,CAAC,CAAC;EACTC,EAAE,EAAC,EAAE;EACLC,QAAQ,EAAC,EAAE;EACXC,WAAW,EAACA,CAAA,KAAI,CAAC,CAAC;EAClBC,aAAa,EAACA,CAAA,KAAI,CAAC,CAAC;EACpBC,aAAa,EAACA,CAAA,KAAI,CAAC;AACvB,CAAC,CAAC;AACF;AACA,MAAMC,YAAY,GAAEC,KAAK,IAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACnB,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAM,CAACS,MAAM,EAACW,SAAS,CAAC,GAACpB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACrCM,MAAM,CAACe,SAAS,GAAEC,UAAU,IAAG;IAC3B,MAAM;MAACC;IAAI,CAAC,GAACD,UAAU;IACvB,MAAM,CAACE,IAAI,EAACC,OAAO,CAAC,GAACC,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;IACrCK,OAAO,CAACC,GAAG,CAAC,cAAc,GAACL,IAAI,CAAC;IAChC,QAAOA,IAAI;MACP,KAAK,QAAQ;QAAC;UACVL,QAAQ,CAAC,MAAI,CAAC,GAAGD,KAAK,EAAC,GAAGO,OAAO,CAAC,CAAC;UACnCG,OAAO,CAACC,GAAG,CAAC,QAAQ,GAACJ,OAAO,CAAC;UAC7B;QACJ;MACA;QAAQ;IACZ;EACJ,CAAC;EACD,MAAMK,QAAQ,GAAG,MAAOP,IAAI,IAAK;IAE7B,IAAIQ,CAAC,GAAC,MAAMzB,MAAM,CAAC0B,IAAI,CAAEN,IAAI,CAACO,SAAS,CAACV,IAAI,CAAC,CAAC;IAC9CK,OAAO,CAACC,GAAG,CAAC,QAAQ,GAACE,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMnB,WAAW,GAAEa,OAAO,IAAG;IACzBK,QAAQ,CAAC,CAAC,OAAO,EAACL,OAAO,CAAC,CAAC;IAC3BG,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;EACxB,CAAC;EACD,MAAMZ,aAAa,GAACA,CAAA,KAAI;IACpBiB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACvB,CAAC;EACD,oBACIzB,OAAA,CAACG,WAAW,CAAC0B,QAAQ;IACjBC,KAAK,EAAE;MACH1B,MAAM;MAACS,KAAK;MACZN,WAAW;MAACC;IAChB,CAAE;IAAA,GACEG;EAAK;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAGV,CAAC;AAAAtB,EAAA,CAvCKF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAwClB,MAAM0B,MAAM,GAACA,CAAA;EAAAC,GAAA;EAAA,OAAIxC,UAAU,CAACM,WAAW,CAAC;AAAA;AAAAkC,GAAA,CAAlCD,MAAM;AACZ,SAAO1B,YAAY,EAAC0B,MAAM;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}