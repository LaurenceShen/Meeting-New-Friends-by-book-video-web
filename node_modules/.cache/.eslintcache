[{"/Users/jelinali/Web/src/index.js":"1"},{"size":5530,"mtime":1689078172031,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","suppressedMessages":"6","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"7"},"1l9yni3","/Users/jelinali/Web/src/index.js",["8","9"],[],"import React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n/* mdb-react-ui-kit */\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport { MDBInputGroup, MDBInput, MDBIcon, MDBBtn } from 'mdb-react-ui-kit';\nimport { MDBCol, MDBRow } from 'mdb-react-ui-kit';\nimport {\n  MDBNavbar,\n  MDBContainer,\n  MDBNavbarNav,\n  MDBNavbarItem,\n  MDBNavbarLink,\n  MDBNavbarToggler,\n  MDBCollapse,\n  MDBDropdown,\n  MDBDropdownMenu,\n  MDBDropdownToggle,\n  MDBDropdownItem,\n} from 'mdb-react-ui-kit';\n\nfunction NavBar(){\n\n  const [showNavRight, setShowNavRight] = useState(false);\n\n  return (\n    <MDBNavbar fixed=\"top\" expand='sm' light >\n      <MDBContainer fluid>\n        <MDBNavbarToggler\n          type='button'\n          data-target='#navbarRightAlignExample'\n          aria-controls='navbarRightAlignExample'\n          aria-expanded='false'\n          aria-label='Toggle navigation'\n          onClick={() => setShowNavRight(!showNavRight)}\n        >\n          <MDBIcon icon='bars' fas />\n        </MDBNavbarToggler>\n\n        <MDBCollapse navbar show={showNavRight}>\n          <MDBNavbarNav right fullWidth={false} className='mb-2 mb-lg-0'>\n            <MDBNavbarItem>\n              <MDBNavbarLink active aria-current='page' href='#'>\n                Home\n              </MDBNavbarLink>\n            </MDBNavbarItem>\n            <MDBNavbarItem>\n              <MDBNavbarLink href='#'>Link</MDBNavbarLink>\n            </MDBNavbarItem>\n\n            <MDBNavbarItem>\n              <MDBDropdown>\n                <MDBDropdownToggle tag='a' className='nav-link'>\n                  Dropdown\n                </MDBDropdownToggle>\n                <MDBDropdownMenu>\n                  <MDBDropdownItem link>Action</MDBDropdownItem>\n                  <MDBDropdownItem link>Another action</MDBDropdownItem>\n                  <MDBDropdownItem link>Something else here</MDBDropdownItem>\n                </MDBDropdownMenu>\n              </MDBDropdown>\n            </MDBNavbarItem>\n            <MDBNavbarItem>\n              <MDBNavbarLink disabled href='#' tabIndex={-1} aria-disabled='true'>\n                Disabled\n              </MDBNavbarLink>\n            </MDBNavbarItem>\n          </MDBNavbarNav>\n        </MDBCollapse>\n      </MDBContainer>\n    </MDBNavbar>\n  );\n}\n\nfunction SearchBar(){\n\n  const [showSearchAlert, setShowSearchAlert] = useState(false);\n  return (\n    <div className = \"Search-Block\">\n    <div className = \"Search-Column\">\n      <MDBInputGroup>\n        <MDBInput label='Search' />\n      </MDBInputGroup>\n      </div>\n      <div className = \"Search-Button\">\n        <MDBBtn size='lg'  floating style={{ background: 'linear-gradient(to right, rgba(102, 126, 234, 0.5), rgba(118, 75, 162, 0.5))' }}>\n            <MDBIcon  icon='search' />\n        </MDBBtn>\n      </div>\n\n    </div>\n  );\n}\n\nclass Recommendation extends React.Component {\n    render(){\n        return(\n            <div className = \"Recommend\">\n                <h3 className = \"Title\"> Recommend </h3>\n                <Books />\n            </div>\n        )\n    }\n}\n\nfunction Books(){\n    let imgs = [\n        [\n            'https://mdbootstrap.com/img/new/standard/city/041.jpg',\n            'https://mdbootstrap.com/img/new/standard/city/042.jpg',\n            'https://mdbootstrap.com/img/new/standard/city/043.jpg',\n        ],\n        [\n            'https://mdbootstrap.com/img/new/standard/city/044.jpg',\n            'https://mdbootstrap.com/img/new/standard/city/045.jpg',\n            'https://mdbootstrap.com/img/new/standard/city/046.jpg',\n        ],\n        [\n            'https://mdbootstrap.com/img/new/standard/city/047.jpg',\n            'https://mdbootstrap.com/img/new/standard/city/048.jpg',\n            'https://mdbootstrap.com/img/new/standard/city/049.jpg',\n        ],\n        [\n            'https://mdbootstrap.com/img/new/standard/city/050.jpg',\n            'https://mdbootstrap.com/img/new/standard/city/051.jpg',\n            'https://mdbootstrap.com/img/new/standard/city/052.jpg',\n        ],\n    ]\n\n    let imgs_post = imgs.map((i)=>\n        <MDBRow>\n        <MDBCol lg='4' md='12' className='mb-4'>\n          <img\n            src={i[0]}\n            className='img-fluid shadow-2-strong rounded-4'\n            alt=''\n          />\n        </MDBCol>\n        <MDBCol lg='4' md='6' className='mb-4'>\n          <img\n            src={i[1]}\n            className='img-fluid shadow-2-strong rounded-4'\n            alt=''\n          />\n        </MDBCol>\n        <MDBCol lg='4' md='6' className='mb-4'>\n          <img\n            src={i[2]}\n            className='img-fluid shadow-2-strong rounded-4'\n            alt=''\n          />\n        </MDBCol>\n        </MDBRow>\n    )\n    console.log(imgs_post)\n  return (\n    <MDBContainer>\n        {imgs_post}\n    </MDBContainer>\n  )\n}\n\nclass FrontPage extends React.Component {\n    render(){\n        return(\n            <div className = \"FrontPage\">\n                <div className = \"Nav-Bar\">\n                    <NavBar />\n                </div>\n                <h2 className = \"Title\"> Search! </h2>\n                <div className = \"Search-Bar\">\n                    <SearchBar />\n                </div>\n                <div className = \"Recommend-Block\">\n                    <Recommendation \n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n\n\n// ========================================\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<FrontPage />);\n",{"ruleId":"10","severity":1,"message":"11","line":78,"column":10,"nodeType":"12","messageId":"13","endLine":78,"endColumn":25},{"ruleId":"10","severity":1,"message":"14","line":78,"column":27,"nodeType":"12","messageId":"13","endLine":78,"endColumn":45},"no-unused-vars","'showSearchAlert' is assigned a value but never used.","Identifier","unusedVar","'setShowSearchAlert' is assigned a value but never used."]